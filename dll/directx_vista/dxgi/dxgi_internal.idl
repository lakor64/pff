/*
 * PROJECT:     ReactX Graphics Infrastructure
 * COPYRIGHT:   See COPYING in the top level directory
 * PURPOSE:     Internal structures for DXGI
 * COPYRIGHT:   Copyright 2023 Christian Rendina <christian.rendina@gmail.com>
 */

import "oaidl.idl";
import "ocidl.idl";

cpp_quote ("#ifndef _D3DKMTHK_H_")
typedef enum _KMTUMDVERSION
{
	KMTUMDVERSION_DX9 = 0,
	KMTUMDVERSION_DX10 = 1,
	KMTUMDVERSION_DX11 = 2,
	KMTUMDVERSION_DX12 = 3,
	KMTUMDVERSION_DX12_WSA32 = 4,
	KMTUMDVERSION_DX12_WSA64 = 5,
	NUM_KMTUMDVERSIONS = 6
} KMTUMDVERSION;
cpp_quote ("#endif")

typedef enum _DXGI_THUNKS_VERSION
{
	DXGI_THUNKS_VERSION_NONE = 0,
	DXGI_THUNKS_VERSION_1 = 1,
	DXGI_THUNKS_VERSION_2 = 2,
	DXGI_THUNKS_VERSION_3 = 3,
	DXGI_THUNKS_VERSION_4 = 4,
} DXGI_THUNKS_VERSION;

[
	object,
	local,
	uuid(bbfeb1e3-6f00-4ad0-a003-dc3c98c415e8)
]
interface IDXGIAdapterInternal : IUnknown
{
	HRESULT GetUMDDeviceSize(
		[in] UINT unk,
		[in] UINT unk2,
		[in] UINT unk3
	);
}

[
	object,
	local,
	uuid(712bd56d-86ff-4b71-91e1-c13b274ff2a2)
]
interface IDXGIAdapterInternal1 : IDXGIAdapterInternal
{
	// TODO: We don't know the members and differences between this and the 2...
};

[
	object,
	local,
	uuid(7abb6563-02bc-47c4-8ef9-acc4795edbcf)
]
interface IDXGIAdapterInternal2 : IDXGIAdapterInternal1
{
	HRESULT LoadUMD(
		[in] KMTUMDVERSION Version,
		[out] HINSTANCE* hUmdDLL
	);

	HRESULT InstanceTrunks(
		[in] DXGI_THUNKS_VERSION ver,
		[in] UINT* unk,
		[in] UINT unk2,
		[out] void* unk3
	);

	HRESULT RetireUsage(
		[in] UINT v
	);

	HRESULT SetAdapterCapabilities(
		[in] void* Capabilities // DXGI_ADAPTER_CAPABILITIES
	);

	HRESULT GetAdapterCapabilities(
		[in][out] void* Capabilities // DXGI_ADAPTER_CAPABILITIES
	);

	BOOL IsWARP(void);
}
